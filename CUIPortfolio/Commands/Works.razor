@inject HttpClient Http
@if (works == null)
{
    <p class="console">Loading...</p>
}
else
{
    <p class="console" style="color:limegreen">| Works</p>
    @foreach (var item in works)
    {
        <p class="console" style="color:navajowhite">
            |- @item.Name [ @String.Join(", ",item.Language.Select(x => LangageNameConvartUserLike(x))) ] :
            <span class="console">@item.Description</span>
            <span class="console" style="color:skyblue;">[cmd : @item.Command]</span>
        </p>
    }
}

@code {
    private Work[] works;

    protected override async Task OnInitializedAsync()
    {
        works = await Http.GetFromJsonAsync<Work[]>("works.json");
    }

    private string LangageNameConvartUserLike(string str)
    {
        switch (str)
        {
            case "cs":
                return "C#";
            case "js":
                return "JavaScript";
            case "html+razor":
                return "HTML+Razor";
            case "css":
                return "CSS";
            case "processing":
                return "Processing";
        }
        return "?unknown?";
    }
}
